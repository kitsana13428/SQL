//ตาราง
 Employee
    1.id pk
    2.fname int notnull
    3.lname text notnull
    4.address text notnull
    5.tel text notnull
    6.salary numeric notnull

    CREATE TABLE "Employee" (
	"id"	INTEGER,
	"fname"	TEXT NOT NULL,
	"lname"	TEXT NOT NULL,
	"address"	TEXT,
	"tel"	TEXT,
	"salary"	NUMERIC NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT)
);

//ตาราง Products
 Products
    1.product_id
    2.product_name
    3.product_d
    4.product_price

    CREATE TABLE "Products" (
	"products_id"	TEXT NOT NULL,
	"product_name"	TEXT NOT NULL,
	"product_d"	TEXT,
	"product_price"	REAL NOT NULL,
	PRIMARY KEY("products_id")
);
///////////////////////////

//เพิ่มค่า
INSERT INTO Employee (fname, lname, address, tel, salary) 
VALUES ('kitsana', 'rattanapholsaen', 'prachinburi','080-xxxxxx', 25000);
----------------------

//เพิ่มค่าแบบไม่กำหนด 
INSERT INTO Employee  
VALUES (null,'สมหมาย', 'ใจดี', 'ชลบุรี', '080-xxx', 20000)
---------------

//เพิ่มค่าแค่บางคอลัม (ค่าว่างจะเป็น not null)
INSERT INTO Employee(fname, lname, salary)
VALUES ('นิชา', 'ทองดี', 30000)
---------------

//เพิ่มค่าหลายๆค่า
INSERT INTO Employee(fname, lname, salary)
VALUES ('วันดี', 'ทองดี', 35000),('สมหญิง', 'ใจงาม', 20000), ('หัสดิน', 'อยู่เย็น', 15000)
---------------

//ใช้เงื่อนไขเช็ค ถ้าราคาต่ำกว่า 20 ไม่ได้ 
"product_price"	REAL NOT NULL CHECK("product_price" >= 20)
---------------

//การเรียกดูข้อมูลบางตัว fname และ lname
SELECT fname,lname FROM Employee
--------------

//การใช้ AS เพื่อเปลี่ยนชื่อหัวตาราง
SELECT fname AS "ชื่อ", lname AS "นามสกุล", tel AS "เบอร์โทร"
FROM Employee
--------------

//การ distinct แสดงข้อมูลไม่ซ้ำ เลือกนามสกุลที่ไม่ซ้ำกัน
SELECT DISTINCT
lname AS "นามสกุล" 
FROM Employee
-------------

//หาข้อมูลแบบมีเงื่อนไข
SELECT *
FROM Employee
WHERE address = "กรุงเทพ"
    ---หรือ WHERE salary <= 20000
    ---หรือ WHERE address = "กรุงเทพ" AND salary >= 20000
    ---หรือ WHERE NOT address = "กรุงเทพ" 
--------------

//หาข้อมูลที่เป็นค่าว่าง null
SELECT *
FROM Employee
WHERE tel IS NULL 
--------------

//เรียงลำดับ ODER BY 
SELECT *
FROM Employee
ORDER BY salary ASC --น้อยไปหามาก
    ---หรือ ORDER BY salary DESC --มากไปหาน้อย
--------------

//ใช้ LIMIT ในการหาข้อมูล 5 อันดับแรก
SELECT *
FROM Employee
ORDER BY salary DESC
LIMIT 5
------------

//เอาข้อมลอีกตาราง ใส่ในอีกตาราง (ต้องมีชนิดข้อมูล ลักษณะเหมือนกันหมด)
INSERT INTO Products_Place (id,name,price)
    SELECT product_id,product_name,product_price
        FROM Products
-----------

//อัพเดท แก้ไขข้อมูล
UPDATE Employee
SET fname = "กฤษณะ", lname = "รัตนพลแสน"
WHERE id = 1

UPDATE Employee
SET address = "ระยอง"
WHERE address IS NULL 
    --เพิ่มข้อมูลที่เป็นค่าว่าง
-----------

//ลบข้อมูลในตาราง
DELETE FROM Employee
WHERE fname = '004'
-----------

//ค้นหาข้อมูล 
---ขึ้นต้นด้วย ส.
SELECT * FROM Employee
WHERE fname LIKE 'ส%'

--ค้นหาที่มี ส ในชื่อ
SELECT * FROM Employee
WHERE fname LIKE '%ส%'

--ค้นหาด้วย _ หาเลขไรก็ได้ แต่ 3 หลักสุดท้ายเป็นเลข 0
SELECT * FROM Employee
WHERE salary LIKE '_000%'

--ค้นหาข้อมูลแบบมีเงื่อนไข คณิตศาสตร์ (คนที่รายได้ประจำปีมากกว่า 3 แสน)
SELECT fname, lname, salary
FROM Employee WHERE (salary*12) >= 300000
------------

//ใช้เงื่อนไขคณิต ในการดึงข้อมูล
SELECT 
COUNT(*) AS "จำนวนพนักงาน",
MAX(salary) AS "เงินมากสุด",
MIN(salary) AS "เงินต่ำสุด",
SUM(salary) AS "รวมเงินเดือน"
FROM Employee
-------------

//ใช้เงื่อนไข CASE 
SELECT fname, salary,
(
CASE salary 
WHEN 35000 THEN 'PM'
WHEN 29000 THEN 'BA'
ELSE 'DEVELOPER' END
) AS 'ตำแหน่ง'
FROM Employee
ORDER BY Salary DESC
------------

//การจัดกลุ่ม เช่น จังหวัดนี้มีคนกี่คน
SELECT address , COUNT(*) 
FROM Employee
GROUP BY address
------------
